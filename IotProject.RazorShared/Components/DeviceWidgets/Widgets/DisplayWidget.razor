@inject IotDeviceService DeviceService

<h4 class="@HeaderClass">Arduino Display Text</h4>

<div class="@BodyClass">
	<div class="mb-3">
		<textarea @bind="displayText" class="form-control" rows="3" placeholder="Enter text to display..."></textarea>
	</div>
	<button class="btn btn-primary" @onclick="SendTextToDisplay">Send to Display</button>
</div>

@code {
	[CascadingParameter(Name = "HeaderClassValue")]
	public string HeaderClass { get; set; }

	[CascadingParameter(Name = "BodyClassValue")]
	public string BodyClass { get; set; }

	[CascadingParameter] public DeviceResponse Device { get; set; }

	private string displayText = "";

	protected override void OnInitialized()
	{
		// Read current text from device config
		if (Device?.Configuration != null)
		{
			if (Device.Configuration.TryGetValue("display", out var displayObj) && displayObj is JsonElement displayElem)
			{
				if (displayElem.TryGetProperty("text", out var textElem))
				{
					// Convert escaped newlines back to actual newlines
					displayText = textElem.GetString()?.Replace("\\n", "\n") ?? "";
				}
			}
		}
	}

	private async Task SendTextToDisplay()
	{
		if (string.IsNullOrWhiteSpace(displayText)) return;

		// Replaces line breaks with \n
		string formattedText = displayText.Replace("\r\n", "\n").Replace("\n", "\\n");

		var config = new Dictionary<string, object>
		{
			["display"] = new Dictionary<string, object>
			{
				["text"] = formattedText,
				["weight"] = 3
			}
		};

		await DeviceService.UpdateDeviceConfiguration(Device.Id, config);
	}
}