@inject ApiService ApiService

<EditForm Model="Room" OnValidSubmit="Submit"><DataAnnotationsValidator />
    <DataAnnotationsValidator />
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3 mb-n1" />
                Edit Room
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField Class="mt-1" Label="Name" @bind-Value="Room.Name" For="@(() => Room.Name)" />
            <MudTextField T="string" Label="Description" @bind-Value="Room.Description" Lines="3" />
        </DialogContent>
        <DialogActions>
            <MudButton Disabled="loading" Color="Color.Primary" ButtonType="ButtonType.Submit">
                @if (loading)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    <p Class="ms-2">Saving</p>
                }
                else
                {
                    <p>Save</p>
                }
            </MudButton>
            <MudButton Disabled="loading" OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public RoomUpdateRequest Room { get; set; }

    private bool loading = false;

    private async Task Submit()
    {
        loading = true;

        var result = await ApiService.UpdateRoom(Room);
        if (result)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }

        loading = false;
    }

    private void Cancel() => MudDialog.Cancel();
}