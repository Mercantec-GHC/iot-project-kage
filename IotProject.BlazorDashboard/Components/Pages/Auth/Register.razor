@page "/register"
@inject NavigationManager NavigationManager
@inject AuthService AuthService

<div class="row justify-content-center align-items-center vh-100">
    <div class="col col-sm-8 col-md-7 col-lg-6 col-xl-5">
        <Card Class="rounded-top-4 overflow-hidden lighter-border shadow card-gradient">
            <Card class="rounded-top-4 overflow-hidden">
                <CardHeader Class="p-0">
                    <a href="/" class="d-absolute text-secondary m-2" style="text-decoration: none;">
                        <Icon Name="IconName.ArrowLeft" />
                        <span>Back</span>
                    </a>
                    <div class="text-center text-white p-3">
                        <div class="auth-logo">
                            <Icon Name="IconName.ShieldCheck" Style="font-size: 2rem;" Class="icon-gradient" />
                        </div>
                        <h1 style="font-size: 1.5rem; font-weight: 600; margin-bottom: 0.25rem;">Create Account</h1>
                        <p class="mb-0" style="font-size: 0.875rem; opacity: 0.9;">Welcome to our platform</p>
                    </div>
                </CardHeader>
                <CardBody>
                    <EditForm Model="registerModel" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">First name</label>
                                <TextInput Id="InputFirstName" @bind-Value="registerModel.FirstName" placeholder="First name" />
                                <ValidationMessage For="@(() => registerModel.FirstName)" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">Last name</label>
                                <TextInput Id="InputLastName" @bind-Value="registerModel.LastName" placeholder="Last name" />
                                <ValidationMessage For="@(() => registerModel.LastName)" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <TextInput Id="InputEmail" @bind-Value="registerModel.Email" placeholder="Email" />
                            <ValidationMessage For="@(() => registerModel.Email)" />
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Password</label>
                                <PasswordInput Id="InputPassword" @bind-Value="registerModel.Password" placeholder="Password" />
                                <ValidationMessage For="@(() => registerModel.Password)" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">Confirm password</label>
                                <PasswordInput Id="InputConfirmPassword" @bind-Value="registerModel.ConfirmPassword" placeholder="Password" />
                                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                            </div>
                        </div>

                        <Button Type="ButtonType.Submit" Class="btn-gradient w-100 text-white" Loading="loading" LoadingText="Creating account" Disabled="loading">
                            <span class="text-white">Create Account</span>
                            <Icon Name="IconName.ArrowRight" Class="text-white" />
                        </Button>
                    </EditForm>
                </CardBody>
                <CardFooter>
                    <div class="text-center text-secondary p-2">
                        <p class="mb-0">
                            Already have an account? <a style="color: #DEE2E6;" href="/login">Sign in</a>
                        </p>
                    </div>
                </CardFooter>
            </Card>
        </Card>
    </div>
</div>

@code {
    private UserCreateRequest registerModel = new();
    private bool loading = false;

    private async Task HandleSubmit()
    {
        loading = true;
        var result = await AuthService.Register(registerModel);
        if (result != null) NavigationManager.NavigateTo("/login", true);
        loading = false;
    }
} 