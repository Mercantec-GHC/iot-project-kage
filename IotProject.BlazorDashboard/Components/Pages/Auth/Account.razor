@page "/account"
@using System.Security.Claims
@inject AuthenticationStateProvider AuthProvider

<PageTitle>Account</PageTitle>

<div class="row justify-content-center">
	<div class="col-12 col-md-8 col-lg-6">
		<Card Class="rounded-top-4 overflow-hidden lighter-border shadow card-gradient">
			<Card Class="rounded-top-4 overflow-hidden">
				<CardHeader Class="p-0">
					<div class="text-center text-white p-3">
						<div class="auth-logo">
							<Icon Name="IconName.PersonCircle" Style="font-size: 2rem;" Class="icon-gradient" />
						</div>
						<h1 style="font-size: 1.5rem; font-weight: 600; margin-bottom: .25rem;">Account</h1>
					</div>
				</CardHeader>
				<CardBody>
					@{
						var authState = AuthenticationState.Result;
						var user = authState?.User;
						if (user != null)
						{
							<div class="row g-3 m-0">
								<div class="col-12 col-md-6">
									<label class="form-label"><b>First name:</b></label>
									<p class="m-0">@user.FindFirst("FirstName")?.Value</p>
								</div>
								<div class="col-12 col-md-6">
									<label class="form-label"><b>Last name:</b></label>
									<p class="m-0">@user.FindFirst("LastName")?.Value</p>
								</div>
								<hr class="solid my-3"/>
								<div class="col-12">
									<label class="form-label"><b>Email:</b></label>
									<p class="m-0">@user.FindFirst("Email")?.Value</p>
								</div>
								<hr class="solid my-3" />
								<div class="col-12 col-md-6">
									<Button Class="btn-gradient w-100" @onclick="@(() => editAccount.OnShowModalClick())">Edit account</Button>
									<EditAccountComponent @ref="editAccount"/>
								</div>
								<div class="col-12 col-md-6">
									<Button Class="btn-gradient w-100" @onclick="@(() => editPassword.OnShowModalClick())">Edit password</Button>
									<EditPasswordComponent @ref="editPassword"/>
								</div>
								<div class="col-12">
									<Button Class="btn-gradient w-100">Delete Account</Button>
								</div>
							</div>
						}
					}
				</CardBody>
			</Card>
		</Card>
	</div>
</div>


@code {
	[CascadingParameter]
	private Task<AuthenticationState?> AuthenticationState { get; set; }

	private EditAccountComponent editAccount = default!;
	private EditPasswordComponent editPassword = default!;
}