@page "/login"
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<div class="row justify-content-center align-items-center vh-100">
    <div class="col col-sm-8 col-md-7 col-lg-6 col-xl-5">
        <Card Class="rounded-top-4 overflow-hidden lighter-border shadow card-gradient">
            <Card Class="rounded-top-4 overflow-hidden">
                <CardHeader class="p-0" Style="">
                    <a href="/" class="d-absolute text-secondary m-2" style="text-decoration: none;">
                        <Icon Name="IconName.ArrowLeft" />
                        <span>Back</span>
                    </a>
                    <div class="text-center text-white p-2">
                        <div class="auth-logo">
                            <Icon Name="IconName.ShieldCheck" Style="font-size: 2rem;" Class="icon-gradient" />
                        </div>
                        <h1 style="font-size: 1.5rem; font-weight: 600; margin-bottom: 0.25rem;">Welcome Back</h1>
                        <p class="mb-0" style="font-size: 0.875rem; opacity: 0.9;">Sign in to your account</p>
                    </div>
                </CardHeader>
                <CardBody>
                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <TextInput Id="loginInputEmail" Class="mb-3" @bind-Value="loginModel.Email" placeholder="Email" />
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <PasswordInput Id="loginInputPassword" @bind-Value="loginModel.Password" placeholder="Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>
                        <div class="mb-3">
                            <CheckboxInput Label="Remember me" @bind-Value="remember" Class="no-select" />
                        </div>
                        <Button Type="ButtonType.Submit" Class="btn-gradient w-100 text-white" Loading="loading" LoadingText="Signing in" Disabled="loading">
                            <span class="text-white">Sign In</span>
                            <Icon Name="IconName.ArrowRight" Class="text-white" />
                        </Button>

                    </EditForm>
                </CardBody>
                <CardFooter>
                    <div class="text-center text-secondary p-2">
                        <p class="mb-0">
                            Don't have an account? <a style="color: #DEE2E6;" href="/register">Sign up</a>
                        </p>
                    </div>
                </CardFooter>
            </Card>
        </Card>
    </div>
</div>


@code {
    private UserLoginRequest loginModel = new();
    private bool loading = false;
    private bool remember = false;
    private string passwordType = "password";
    private string passwordIcon = "bi-eye";

    private void TogglePasswordVisibility()
    {
        passwordType = passwordType == "password" ? "text" : "password";
        passwordIcon = passwordIcon == "bi-eye" ? "bi-eye-slash" : "bi-eye";
    }

    private async Task HandleLogin()
    {
        loading = true;
        var isSuccess = await AuthService.Login(loginModel);
        if(isSuccess)
        {
            NavigationManager.NavigateTo("/", true);
        }
        loading = false;
    }
}
